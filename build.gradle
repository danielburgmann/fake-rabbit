buildscript {
	ext {
		springBootVersion = '2.5.6'
		glowrootVersion = '0.13.6'

		generatedResourcesDir = file("$buildDir/generated-resources")
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath(group: 'org.springframework.boot', name:'spring-boot-gradle-plugin', version:springBootVersion)
	}
}

plugins {
	id 'org.ajoberstar.grgit' version '4.1.0'
	id 'com.palantir.docker' version '0.25.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

apply from: 'gradle/build-info.gradle'

group = 'de.db8.os.sample'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// APM scenario with glowroot
	docker "org.glowroot:glowroot-agent:${glowrootVersion}"

	// REST API client with OpenFeign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.0.5'
	implementation 'io.github.openfeign:feign-httpclient:11.7'

	// fixing dependencies in dependency tree
	constraints {
		implementation('commons-io:commons-io:2.11.0') {
			because 'version 2.2 pulled by org.springframework.cloud:spring-cloud-starter-openfeign:3.0.5 has security issues'
		}
	}

}

task copyDockerDependencies(type: Copy) {
	into "$buildDir/output/docker-libs"
	from configurations.docker
}

docker {
	name 'fake-rabbit:latest'
	dockerfile file("${projectDir}/docker/Dockerfile")
	files tasks.bootJar.outputs, tasks.copyDockerDependencies.outputs
}
